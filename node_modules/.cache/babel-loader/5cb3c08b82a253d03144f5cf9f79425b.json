{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ishik\\\\VS code\\\\Form\\\\dynamic-form-builder\\\\src\\\\components\\\\FormBuilder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Grid, Typography } from '@mui/material';\nimport { saveFormConfig } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormBuilder = () => {\n  _s();\n  const [fields, setFields] = useState([]);\n  const [fieldType, setFieldType] = useState('text');\n  const [fieldLabel, setFieldLabel] = useState('');\n  const [validationRule, setValidationRule] = useState('');\n  const addField = () => {\n    const newField = {\n      type: fieldType,\n      label: fieldLabel,\n      validation: validationRule\n    };\n    setFields([...fields, newField]);\n    setFieldLabel('');\n    setValidationRule('');\n  };\n  const saveForm = () => {\n    const formConfig = {\n      fields\n    };\n    saveFormConfig(formConfig);\n    alert('Form saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Dynamic Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Field Label\",\n          value: fieldLabel,\n          onChange: e => setFieldLabel(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Field Type\",\n          value: fieldType,\n          onChange: e => setFieldType(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Validation Rule\",\n          value: validationRule,\n          onChange: e => setValidationRule(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: addField,\n          children: \"Add Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: saveForm,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Save Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Fields:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [field.label, \" (\", field.type, \") - Validation: \", field.validation]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(FormBuilder, \"UB7heuZ0KpfvaHnZBRrn4KrhOSY=\");\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","TextField","Button","Grid","Typography","saveFormConfig","jsxDEV","_jsxDEV","FormBuilder","_s","fields","setFields","fieldType","setFieldType","fieldLabel","setFieldLabel","validationRule","setValidationRule","addField","newField","type","label","validation","saveForm","formConfig","alert","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","value","onChange","e","target","fullWidth","onClick","style","marginLeft","marginTop","map","field","index","_c","$RefreshReg$"],"sources":["C:/Users/ishik/VS code/Form/dynamic-form-builder/src/components/FormBuilder.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Grid, Typography } from '@mui/material';\nimport { FormField, FormConfig } from '../types';\nimport { saveFormConfig } from '../utils/localStorage';\n\nconst FormBuilder: React.FC = () => {\n    const [fields, setFields] = useState<FormField[]>([]);\n    const [fieldType, setFieldType] = useState<string>('text');\n    const [fieldLabel, setFieldLabel] = useState<string>('');\n    const [validationRule, setValidationRule] = useState<string>('');\n\n    const addField = () => {\n        const newField: FormField = {\n            type: fieldType,\n            label: fieldLabel,\n            validation: validationRule,\n        };\n        setFields([...fields, newField]);\n        setFieldLabel('');\n        setValidationRule('');\n    };\n\n    const saveForm = () => {\n        const formConfig: FormConfig = { fields };\n        saveFormConfig(formConfig);\n        alert('Form saved successfully!');\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h4\">Dynamic Form Builder</Typography>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField\n                        label=\"Field Label\"\n                        value={fieldLabel}\n                        onChange={(e) => setFieldLabel(e.target.value)}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label=\"Field Type\"\n                        value={fieldType}\n                        onChange={(e) => setFieldType(e.target.value)}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label=\"Validation Rule\"\n                        value={validationRule}\n                        onChange={(e) => setValidationRule(e.target.value)}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button variant=\"contained\" onClick={addField}>\n                        Add Field\n                    </Button>\n                    <Button variant=\"contained\" onClick={saveForm} style={{ marginLeft: '10px' }}>\n                        Save Form\n                    </Button>\n                </Grid>\n            </Grid>\n            <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Fields:</Typography>\n            <ul>\n                {fields.map((field, index) => (\n                    <li key={index}>{field.label} ({field.type}) - Validation: {field.validation}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default FormBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}