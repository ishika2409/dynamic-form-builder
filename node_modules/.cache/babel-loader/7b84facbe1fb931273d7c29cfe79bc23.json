{"ast":null,"code":"import _objectSpread from\"C:/Users/ishik/VS code/Form/dynamic-form-builder/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback}from'react';import{Box,Button,MenuItem,Select,TextField,Typography,Checkbox,FormControlLabel,Dialog,DialogTitle,DialogContent,DialogActions,List,ListItem,IconButton,Divider,Radio,Paper,Alert}from'@mui/material';import{v4 as uuidv4}from'uuid';import{SvgIcon}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DeleteIcon=props=>/*#__PURE__*/_jsx(SvgIcon,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(\"path\",{d:\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"})}));const CreateForm=()=>{const[fields,setFields]=useState([]);const[newField,setNewField]=useState('text');const[formName,setFormName]=useState('');const[openDialog,setOpenDialog]=useState(false);const[showPreview,setShowPreview]=useState(false);const[previewValues,setPreviewValues]=useState({});const evalFormula=useCallback((formula,context)=>{try{const safeContext=_objectSpread({},context);const helpers={Date:Date,Math:Math,parseInt:parseInt,parseFloat:parseFloat,calculateAge:birthDate=>{if(!birthDate)return 0;const today=new Date();const birth=new Date(birthDate);if(isNaN(birth.getTime()))return 0;let age=today.getFullYear()-birth.getFullYear();const monthDiff=today.getMonth()-birth.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birth.getDate()){age--;}return age;}};const evalContext=_objectSpread(_objectSpread({},safeContext),helpers);const params=Object.keys(evalContext);const values=Object.values(evalContext);const func=new Function(...params,\"\\\"use strict\\\"; return (\".concat(formula,\");\"));return func(...values);}catch(error){console.error('Formula evaluation error:',error,'Formula:',formula,'Context:',context);return'Error';}},[]);const updateDerivedFields=useCallback(values=>{const newValues=_objectSpread({},values);let hasChanges=false;fields.forEach(field=>{if(field.derived&&field.parentFields&&field.formula){const context={};let hasAllParents=true;field.parentFields.forEach(parentId=>{const parentField=fields.find(f=>f.id===parentId);if(parentField&&parentId in values){context[parentField.label.toLowerCase().replace(/\\s+/g,'_')]=values[parentId];}else{hasAllParents=false;}});if(hasAllParents){const computedValue=evalFormula(field.formula,context);if(newValues[field.id]!==computedValue){newValues[field.id]=computedValue;hasChanges=true;}}}});if(hasChanges){setPreviewValues(newValues);}},[fields,evalFormula]);const addField=()=>{const id=uuidv4();const field={id,type:newField,label:'',validation:{required:false},options:newField==='select'?[]:undefined};if(['select','radio','checkbox'].includes(newField)){field.options=['Option 1','Option 2'];}setFields(prev=>[...prev,field]);};const updateField=(id,updated)=>{setFields(prev=>prev.map(field=>field.id===id?_objectSpread(_objectSpread({},field),updated):field));};const deleteField=id=>{setFields(prev=>prev.filter(field=>field.id!==id));setPreviewValues(prev=>{const newValues=_objectSpread({},prev);delete newValues[id];return newValues;});};const saveForm=()=>{const formSchema={name:formName,fields,createdAt:new Date().toISOString()};localStorage.setItem(\"form_\".concat(formName),JSON.stringify(formSchema));setOpenDialog(false);alert('Form saved successfully!');setFields([]);setFormName('');setPreviewValues({});};const handlePreviewChange=(fieldId,value)=>{const newValues=_objectSpread(_objectSpread({},previewValues),{},{[fieldId]:value});setPreviewValues(newValues);updateDerivedFields(newValues);};const getAvailableParentFields=currentFieldId=>{return fields.filter(f=>f.id!==currentFieldId&&!f.derived&&f.label.trim()!=='');};const renderPreviewField=field=>{var _previewValues$field$,_field$options,_field$options2,_field$options3;const value=(_previewValues$field$=previewValues[field.id])!==null&&_previewValues$field$!==void 0?_previewValues$field$:field.type==='checkbox'?[]:'';if(field.derived){return/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"\".concat(field.label,\" (Auto-calculated)\"),value:value,disabled:true,margin:\"normal\",sx:{'& .MuiInputBase-input':{color:'text.secondary'}}},field.id);}switch(field.type){case'text':case'number':case'date':return/*#__PURE__*/_jsx(TextField,{type:field.type,fullWidth:true,label:field.label,value:value,onChange:e=>handlePreviewChange(field.id,e.target.value),margin:\"normal\"},field.id);case'textarea':return/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:field.label,value:value,onChange:e=>handlePreviewChange(field.id,e.target.value),multiline:true,rows:3,margin:\"normal\"},field.id);case'select':return/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:field.label}),/*#__PURE__*/_jsx(Select,{fullWidth:true,value:value,onChange:e=>handlePreviewChange(field.id,e.target.value),children:(_field$options=field.options)===null||_field$options===void 0?void 0:_field$options.map((opt,i)=>/*#__PURE__*/_jsx(MenuItem,{value:opt,children:opt},i))})]},field.id);case'radio':return/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:field.label}),(_field$options2=field.options)===null||_field$options2===void 0?void 0:_field$options2.map((opt,i)=>/*#__PURE__*/_jsx(FormControlLabel,{value:opt,control:/*#__PURE__*/_jsx(Radio,{checked:value===opt,onChange:()=>handlePreviewChange(field.id,opt)}),label:opt},i))]},field.id);case'checkbox':return/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{children:field.label}),(_field$options3=field.options)===null||_field$options3===void 0?void 0:_field$options3.map((opt,i)=>/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:Array.isArray(value)&&value.includes(opt),onChange:e=>{const currentValue=Array.isArray(value)?value:[];const newValue=e.target.checked?[...currentValue,opt]:currentValue.filter(v=>v!==opt);handlePreviewChange(field.id,newValue);}}),label:opt},i))]},field.id);default:return null;}};return/*#__PURE__*/_jsxs(Box,{p:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Create Dynamic Form\"}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:2,alignItems:\"center\",mb:3,children:[/*#__PURE__*/_jsxs(Select,{value:newField,onChange:e=>setNewField(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"number\",children:\"Number\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"textarea\",children:\"Textarea\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"select\",children:\"Select\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"radio\",children:\"Radio\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"checkbox\",children:\"Checkbox\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"date\",children:\"Date\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:addField,children:\"Add Field\"}),fields.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>setShowPreview(!showPreview),children:showPreview?'Hide Preview':'Show Preview'})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:3,children:[/*#__PURE__*/_jsxs(Box,{flex:showPreview?1:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Form Builder\"}),/*#__PURE__*/_jsx(List,{children:fields.map((field,index)=>{var _field$defaultValue,_field$options4;return/*#__PURE__*/_jsxs(Box,{mb:3,children:[/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsxs(Box,{width:\"100%\",children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",mb:1,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Field #\",index+1,\" - \",field.type]}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>deleteField(field.id),children:/*#__PURE__*/_jsx(DeleteIcon,{})})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Label\",value:field.label,onChange:e=>updateField(field.id,{label:e.target.value}),margin:\"normal\"}),!field.derived&&/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Default Value\",value:(_field$defaultValue=field.defaultValue)!==null&&_field$defaultValue!==void 0?_field$defaultValue:'',onChange:e=>updateField(field.id,{defaultValue:e.target.value}),margin:\"normal\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:field.validation.required,onChange:e=>updateField(field.id,{validation:_objectSpread(_objectSpread({},field.validation),{},{required:e.target.checked})})}),label:\"Required\"}),field.type==='text'||field.type==='textarea'?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(TextField,{type:\"number\",label:\"Min Length\",value:field.validation.minLength||'',onChange:e=>updateField(field.id,{validation:_objectSpread(_objectSpread({},field.validation),{},{minLength:Number(e.target.value)})}),margin:\"normal\",size:\"small\",sx:{mr:2}}),/*#__PURE__*/_jsx(TextField,{type:\"number\",label:\"Max Length\",value:field.validation.maxLength||'',onChange:e=>updateField(field.id,{validation:_objectSpread(_objectSpread({},field.validation),{},{maxLength:Number(e.target.value)})}),margin:\"normal\",size:\"small\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:field.validation.email||false,onChange:e=>updateField(field.id,{validation:_objectSpread(_objectSpread({},field.validation),{},{email:e.target.checked})})}),label:\"Email Format\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:field.validation.password||false,onChange:e=>updateField(field.id,{validation:_objectSpread(_objectSpread({},field.validation),{},{password:e.target.checked})})}),label:\"Password Rule\"})]})]}):null,/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:field.derived||false,onChange:e=>updateField(field.id,{derived:e.target.checked})}),label:\"Is Derived Field?\"}),field.derived&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Parent Fields:\"}),getAvailableParentFields(field.id).map(parentField=>{var _field$parentFields;return/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:((_field$parentFields=field.parentFields)===null||_field$parentFields===void 0?void 0:_field$parentFields.includes(parentField.id))||false,onChange:e=>{const current=field.parentFields||[];const updated=e.target.checked?[...current,parentField.id]:current.filter(id=>id!==parentField.id);updateField(field.id,{parentFields:updated});}}),label:\"\".concat(parentField.label,\" (\").concat(parentField.type,\")\")},parentField.id);}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Formula / Logic\",value:field.formula||'',onChange:e=>updateField(field.id,{formula:e.target.value}),margin:\"normal\",helperText:\"Use field labels in lowercase with underscores (e.g., calculateAge(date_of_birth))\"}),field.parentFields&&field.parentFields.length>0&&field.formula&&/*#__PURE__*/_jsxs(Alert,{severity:\"info\",sx:{mt:1},children:[\"Available variables: \",field.parentFields.map(id=>{const parentField=fields.find(f=>f.id===id);return parentField===null||parentField===void 0?void 0:parentField.label.toLowerCase().replace(/\\s+/g,'_');}).join(', ')]})]}),(field.type==='select'||field.type==='radio'||field.type==='checkbox')&&!field.derived&&/*#__PURE__*/_jsxs(Box,{mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Options\"}),(_field$options4=field.options)===null||_field$options4===void 0?void 0:_field$options4.map((option,optIdx)=>/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:1,gap:1,children:[/*#__PURE__*/_jsx(TextField,{label:\"Option \".concat(optIdx+1),value:option,onChange:e=>{var _field$options5;const newOptions=[...((_field$options5=field.options)!==null&&_field$options5!==void 0?_field$options5:[])];newOptions[optIdx]=e.target.value;updateField(field.id,{options:newOptions});},size:\"small\"}),field.options&&field.options.length>2&&/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{const newOptions=field.options.filter((_,i)=>i!==optIdx);updateField(field.id,{options:newOptions});},children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(FormControlLabel,{control:field.type==='checkbox'?/*#__PURE__*/_jsx(Checkbox,{checked:Array.isArray(field.validation['correctAnswers'])?field.validation['correctAnswers'].includes(option):false,onChange:e=>{let correctAnswers=Array.isArray(field.validation['correctAnswers'])?[...field.validation['correctAnswers']]:[];if(e.target.checked){correctAnswers.push(option);}else{correctAnswers=correctAnswers.filter(ans=>ans!==option);}updateField(field.id,{validation:_objectSpread(_objectSpread({},field.validation),{},{correctAnswers})});}}):/*#__PURE__*/_jsx(Radio,{checked:field.validation['correctAnswer']===option,onChange:()=>updateField(field.id,{validation:_objectSpread(_objectSpread({},field.validation),{},{correctAnswer:option})})}),label:\"Correct\"})]},optIdx)),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",onClick:()=>{var _field$options6;const newOptions=[...((_field$options6=field.options)!==null&&_field$options6!==void 0?_field$options6:[]),\"Option \".concat(field.options.length+1)];updateField(field.id,{options:newOptions});},children:\"Add Option\"})]})]})}),/*#__PURE__*/_jsx(Divider,{})]},field.id);})})]}),showPreview&&fields.length>0&&/*#__PURE__*/_jsx(Box,{flex:1,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Live Preview\"}),/*#__PURE__*/_jsxs(Box,{children:[fields.map(field=>field.label?renderPreviewField(field):null),fields.some(f=>f.derived)&&/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mt:2},children:\"Derived fields will auto-update as you change parent fields above.\"})]})]})})]}),/*#__PURE__*/_jsx(Box,{mt:3,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>setOpenDialog(true),disabled:fields.length===0,children:\"Save Form\"})}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:()=>setOpenDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Save Form\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Form Name\",value:formName,onChange:e=>setFormName(e.target.value),margin:\"normal\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenDialog(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:saveForm,variant:\"contained\",color:\"primary\",disabled:!formName,children:\"Save\"})]})]})]});};export default CreateForm;","map":{"version":3,"names":["React","useState","useCallback","Box","Button","MenuItem","Select","TextField","Typography","Checkbox","FormControlLabel","Dialog","DialogTitle","DialogContent","DialogActions","List","ListItem","IconButton","Divider","Radio","Paper","Alert","v4","uuidv4","SvgIcon","jsx","_jsx","jsxs","_jsxs","DeleteIcon","props","_objectSpread","children","d","CreateForm","fields","setFields","newField","setNewField","formName","setFormName","openDialog","setOpenDialog","showPreview","setShowPreview","previewValues","setPreviewValues","evalFormula","formula","context","safeContext","helpers","Date","Math","parseInt","parseFloat","calculateAge","birthDate","today","birth","isNaN","getTime","age","getFullYear","monthDiff","getMonth","getDate","evalContext","params","Object","keys","values","func","Function","concat","error","console","updateDerivedFields","newValues","hasChanges","forEach","field","derived","parentFields","hasAllParents","parentId","parentField","find","f","id","label","toLowerCase","replace","computedValue","addField","type","validation","required","options","undefined","includes","prev","updateField","updated","map","deleteField","filter","saveForm","formSchema","name","createdAt","toISOString","localStorage","setItem","JSON","stringify","alert","handlePreviewChange","fieldId","value","getAvailableParentFields","currentFieldId","trim","renderPreviewField","_previewValues$field$","_field$options","_field$options2","_field$options3","fullWidth","disabled","margin","sx","color","onChange","e","target","multiline","rows","mb","opt","i","control","checked","Array","isArray","currentValue","newValue","v","p","variant","gutterBottom","display","gap","alignItems","onClick","length","flex","index","_field$defaultValue","_field$options4","width","justifyContent","defaultValue","minLength","Number","size","mr","maxLength","email","password","_field$parentFields","current","helperText","severity","mt","join","option","optIdx","_field$options5","newOptions","_","fontSize","correctAnswers","push","ans","correctAnswer","_field$options6","elevation","some","open","onClose"],"sources":["C:/Users/ishik/VS code/Form/dynamic-form-builder/src/components/CreateForm.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Box, Button, MenuItem, Select, TextField, Typography, Checkbox, FormControlLabel, Dialog, DialogTitle, DialogContent, DialogActions, List, ListItem, IconButton, Divider, Radio, Paper, Alert } from '@mui/material';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { SvgIcon } from '@mui/material';\r\n\r\nconst DeleteIcon = (props: any) => (\r\n    <SvgIcon {...props}>\r\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\r\n    </SvgIcon>\r\n);\r\n\r\ntype FieldType = 'text' | 'number' | 'textarea' | 'select' | 'radio' | 'checkbox' | 'date';\r\n\r\ninterface Validation {\r\n    required: boolean;\r\n    minLength?: number;\r\n    maxLength?: number;\r\n    email?: boolean;\r\n    password?: boolean;\r\n    correctAnswers?: string[];\r\n    correctAnswer?: string;\r\n}\r\n\r\ninterface Field {\r\n    id: string;\r\n    type: FieldType;\r\n    label: string;\r\n    defaultValue?: string;\r\n    options?: string[];\r\n    validation: Validation;\r\n    derived?: boolean;\r\n    parentFields?: string[];\r\n    formula?: string;\r\n}\r\n\r\nconst CreateForm: React.FC = () => {\r\n    const [fields, setFields] = useState<Field[]>([]);\r\n    const [newField, setNewField] = useState<FieldType>('text');\r\n    const [formName, setFormName] = useState('');\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [showPreview, setShowPreview] = useState(false);\r\n    const [previewValues, setPreviewValues] = useState<Record<string, any>>({});\r\n    const evalFormula = useCallback((formula: string, context: Record<string, any>) => {\r\n        try {\r\n            const safeContext = { ...context };\r\n\r\n            const helpers = {\r\n                Date: Date,\r\n                Math: Math,\r\n                parseInt: parseInt,\r\n                parseFloat: parseFloat,\r\n                calculateAge: (birthDate: string) => {\r\n                    if (!birthDate) return 0;\r\n                    const today = new Date();\r\n                    const birth = new Date(birthDate);\r\n                    if (isNaN(birth.getTime())) return 0;\r\n\r\n                    let age = today.getFullYear() - birth.getFullYear();\r\n                    const monthDiff = today.getMonth() - birth.getMonth();\r\n\r\n                    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n                        age--;\r\n                    }\r\n                    return age;\r\n                }\r\n            };\r\n\r\n            const evalContext = { ...safeContext, ...helpers };\r\n\r\n            const params = Object.keys(evalContext);\r\n            const values = Object.values(evalContext);\r\n\r\n            const func = new Function(...params, `\"use strict\"; return (${formula});`);\r\n            return func(...values);\r\n        } catch (error) {\r\n            console.error('Formula evaluation error:', error, 'Formula:', formula, 'Context:', context);\r\n            return 'Error';\r\n        }\r\n    }, []);\r\n\r\n    const updateDerivedFields = useCallback((values: Record<string, any>) => {\r\n        const newValues = { ...values };\r\n        let hasChanges = false;\r\n\r\n        fields.forEach(field => {\r\n            if (field.derived && field.parentFields && field.formula) {\r\n                const context: Record<string, any> = {};\r\n                let hasAllParents = true;\r\n\r\n                field.parentFields.forEach(parentId => {\r\n                    const parentField = fields.find(f => f.id === parentId);\r\n                    if (parentField && parentId in values) {\r\n                        context[parentField.label.toLowerCase().replace(/\\s+/g, '_')] = values[parentId];\r\n                    } else {\r\n                        hasAllParents = false;\r\n                    }\r\n                });\r\n\r\n                if (hasAllParents) {\r\n                    const computedValue = evalFormula(field.formula, context);\r\n\r\n                    if (newValues[field.id] !== computedValue) {\r\n                        newValues[field.id] = computedValue;\r\n                        hasChanges = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (hasChanges) {\r\n            setPreviewValues(newValues);\r\n        }\r\n    }, [fields, evalFormula]);\r\n\r\n    const addField = () => {\r\n        const id = uuidv4();\r\n        const field: Field = {\r\n            id,\r\n            type: newField,\r\n            label: '',\r\n            validation: { required: false },\r\n            options: newField === 'select' ? [] : undefined,\r\n        };\r\n\r\n        if (['select', 'radio', 'checkbox'].includes(newField)) {\r\n            field.options = ['Option 1', 'Option 2'];\r\n        }\r\n\r\n        setFields((prev) => [...prev, field]);\r\n    }\r\n\r\n    const updateField = (id: string, updated: Partial<Field>) => {\r\n        setFields((prev) =>\r\n            prev.map((field) => (field.id === id ? { ...field, ...updated } : field))\r\n        );\r\n    };\r\n\r\n    const deleteField = (id: string) => {\r\n        setFields((prev) => prev.filter((field) => field.id !== id));\r\n        setPreviewValues(prev => {\r\n            const newValues = { ...prev };\r\n            delete newValues[id];\r\n            return newValues;\r\n        });\r\n    };\r\n\r\n    const saveForm = () => {\r\n        const formSchema = {\r\n            name: formName,\r\n            fields,\r\n            createdAt: new Date().toISOString(),\r\n        };\r\n\r\n        localStorage.setItem(`form_${formName}`, JSON.stringify(formSchema));\r\n        setOpenDialog(false);\r\n        alert('Form saved successfully!');\r\n        setFields([]);\r\n        setFormName('');\r\n        setPreviewValues({});\r\n    };\r\n\r\n    const handlePreviewChange = (fieldId: string, value: any) => {\r\n        const newValues = { ...previewValues, [fieldId]: value };\r\n        setPreviewValues(newValues);\r\n        updateDerivedFields(newValues);\r\n    };\r\n\r\n    const getAvailableParentFields = (currentFieldId: string) => {\r\n        return fields.filter(f => f.id !== currentFieldId && !f.derived && f.label.trim() !== '');\r\n    };\r\n\r\n    const renderPreviewField = (field: Field) => {\r\n        const value = previewValues[field.id] ?? (field.type === 'checkbox' ? [] : '');\r\n\r\n        if (field.derived) {\r\n            return (\r\n                <TextField\r\n                    key={field.id}\r\n                    fullWidth\r\n                    label={`${field.label} (Auto-calculated)`}\r\n                    value={value}\r\n                    disabled\r\n                    margin=\"normal\"\r\n                    sx={{ '& .MuiInputBase-input': { color: 'text.secondary' } }}\r\n                />\r\n            );\r\n        }\r\n\r\n        switch (field.type) {\r\n            case 'text':\r\n            case 'number':\r\n            case 'date':\r\n                return (\r\n                    <TextField\r\n                        key={field.id}\r\n                        type={field.type}\r\n                        fullWidth\r\n                        label={field.label}\r\n                        value={value}\r\n                        onChange={(e) => handlePreviewChange(field.id, e.target.value)}\r\n                        margin=\"normal\"\r\n                    />\r\n                );\r\n\r\n            case 'textarea':\r\n                return (\r\n                    <TextField\r\n                        key={field.id}\r\n                        fullWidth\r\n                        label={field.label}\r\n                        value={value}\r\n                        onChange={(e) => handlePreviewChange(field.id, e.target.value)}\r\n                        multiline\r\n                        rows={3}\r\n                        margin=\"normal\"\r\n                    />\r\n                );\r\n\r\n            case 'select':\r\n                return (\r\n                    <Box key={field.id} mb={2}>\r\n                        <Typography>{field.label}</Typography>\r\n                        <Select\r\n                            fullWidth\r\n                            value={value}\r\n                            onChange={(e) => handlePreviewChange(field.id, e.target.value)}\r\n                        >\r\n                            {field.options?.map((opt, i) => (\r\n                                <MenuItem key={i} value={opt}>\r\n                                    {opt}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </Box>\r\n                );\r\n\r\n            case 'radio':\r\n                return (\r\n                    <Box key={field.id} mb={2}>\r\n                        <Typography>{field.label}</Typography>\r\n                        {field.options?.map((opt, i) => (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                value={opt}\r\n                                control={\r\n                                    <Radio\r\n                                        checked={value === opt}\r\n                                        onChange={() => handlePreviewChange(field.id, opt)}\r\n                                    />\r\n                                }\r\n                                label={opt}\r\n                            />\r\n                        ))}\r\n                    </Box>\r\n                );\r\n\r\n            case 'checkbox':\r\n                return (\r\n                    <Box key={field.id} mb={2}>\r\n                        <Typography>{field.label}</Typography>\r\n                        {field.options?.map((opt, i) => (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={Array.isArray(value) && value.includes(opt)}\r\n                                        onChange={(e) => {\r\n                                            const currentValue = Array.isArray(value) ? value : [];\r\n                                            const newValue = e.target.checked\r\n                                                ? [...currentValue, opt]\r\n                                                : currentValue.filter(v => v !== opt);\r\n                                            handlePreviewChange(field.id, newValue);\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label={opt}\r\n                            />\r\n                        ))}\r\n                    </Box>\r\n                );\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box p={3}>\r\n            <Typography variant=\"h4\" gutterBottom>Create Dynamic Form</Typography>\r\n\r\n            <Box display=\"flex\" gap={2} alignItems=\"center\" mb={3}>\r\n                <Select value={newField} onChange={(e) => setNewField(e.target.value as FieldType)}>\r\n                    <MenuItem value=\"text\">Text</MenuItem>\r\n                    <MenuItem value=\"number\">Number</MenuItem>\r\n                    <MenuItem value=\"textarea\">Textarea</MenuItem>\r\n                    <MenuItem value=\"select\">Select</MenuItem>\r\n                    <MenuItem value=\"radio\">Radio</MenuItem>\r\n                    <MenuItem value=\"checkbox\">Checkbox</MenuItem>\r\n                    <MenuItem value=\"date\">Date</MenuItem>\r\n                </Select>\r\n                <Button variant=\"contained\" onClick={addField}>\r\n                    Add Field\r\n                </Button>\r\n                {fields.length > 0 && (\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => setShowPreview(!showPreview)}\r\n                    >\r\n                        {showPreview ? 'Hide Preview' : 'Show Preview'}\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n\r\n            <Box display=\"flex\" gap={3}>\r\n                <Box flex={showPreview ? 1 : 2}>\r\n                    <Typography variant=\"h6\" gutterBottom>Form Builder</Typography>\r\n                    <List>\r\n                        {fields.map((field, index) => (\r\n                            <Box key={field.id} mb={3}>\r\n                                <ListItem>\r\n                                    <Box width=\"100%\">\r\n                                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\r\n                                            <Typography variant=\"h6\">Field #{index + 1} - {field.type}</Typography>\r\n                                            <IconButton onClick={() => deleteField(field.id)}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </Box>\r\n\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Label\"\r\n                                            value={field.label}\r\n                                            onChange={(e) => updateField(field.id, { label: e.target.value })}\r\n                                            margin=\"normal\"\r\n                                        />\r\n\r\n                                        {!field.derived && (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Default Value\"\r\n                                                value={field.defaultValue ?? ''}\r\n                                                onChange={(e) => updateField(field.id, { defaultValue: e.target.value })}\r\n                                                margin=\"normal\"\r\n                                            />\r\n                                        )}\r\n\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={field.validation.required}\r\n                                                    onChange={(e) =>\r\n                                                        updateField(field.id, {\r\n                                                            validation: {\r\n                                                                ...field.validation,\r\n                                                                required: e.target.checked,\r\n                                                            },\r\n                                                        })\r\n                                                    }\r\n                                                />\r\n                                            }\r\n                                            label=\"Required\"\r\n                                        />\r\n\r\n                                        {field.type === 'text' || field.type === 'textarea' ? (\r\n                                            <Box>\r\n                                                <TextField\r\n                                                    type=\"number\"\r\n                                                    label=\"Min Length\"\r\n                                                    value={field.validation.minLength || ''}\r\n                                                    onChange={(e) =>\r\n                                                        updateField(field.id, {\r\n                                                            validation: {\r\n                                                                ...field.validation,\r\n                                                                minLength: Number(e.target.value),\r\n                                                            },\r\n                                                        })\r\n                                                    }\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                    sx={{ mr: 2 }}\r\n                                                />\r\n                                                <TextField\r\n                                                    type=\"number\"\r\n                                                    label=\"Max Length\"\r\n                                                    value={field.validation.maxLength || ''}\r\n                                                    onChange={(e) =>\r\n                                                        updateField(field.id, {\r\n                                                            validation: {\r\n                                                                ...field.validation,\r\n                                                                maxLength: Number(e.target.value),\r\n                                                            },\r\n                                                        })\r\n                                                    }\r\n                                                    margin=\"normal\"\r\n                                                    size=\"small\"\r\n                                                />\r\n                                                <Box>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Checkbox\r\n                                                                checked={field.validation.email || false}\r\n                                                                onChange={(e) =>\r\n                                                                    updateField(field.id, {\r\n                                                                        validation: {\r\n                                                                            ...field.validation,\r\n                                                                            email: e.target.checked,\r\n                                                                        },\r\n                                                                    })\r\n                                                                }\r\n                                                            />\r\n                                                        }\r\n                                                        label=\"Email Format\"\r\n                                                    />\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Checkbox\r\n                                                                checked={field.validation.password || false}\r\n                                                                onChange={(e) =>\r\n                                                                    updateField(field.id, {\r\n                                                                        validation: {\r\n                                                                            ...field.validation,\r\n                                                                            password: e.target.checked,\r\n                                                                        },\r\n                                                                    })\r\n                                                                }\r\n                                                            />\r\n                                                        }\r\n                                                        label=\"Password Rule\"\r\n                                                    />\r\n                                                </Box>\r\n                                            </Box>\r\n                                        ) : null}\r\n\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={field.derived || false}\r\n                                                    onChange={(e) =>\r\n                                                        updateField(field.id, { derived: e.target.checked })\r\n                                                    }\r\n                                                />\r\n                                            }\r\n                                            label=\"Is Derived Field?\"\r\n                                        />\r\n\r\n                                        {field.derived && (\r\n                                            <Box>\r\n                                                <Typography variant=\"subtitle2\" gutterBottom>Parent Fields:</Typography>\r\n                                                {getAvailableParentFields(field.id).map(parentField => (\r\n                                                    <FormControlLabel\r\n                                                        key={parentField.id}\r\n                                                        control={\r\n                                                            <Checkbox\r\n                                                                checked={field.parentFields?.includes(parentField.id) || false}\r\n                                                                onChange={(e) => {\r\n                                                                    const current = field.parentFields || [];\r\n                                                                    const updated = e.target.checked\r\n                                                                        ? [...current, parentField.id]\r\n                                                                        : current.filter(id => id !== parentField.id);\r\n                                                                    updateField(field.id, { parentFields: updated });\r\n                                                                }}\r\n                                                            />\r\n                                                        }\r\n                                                        label={`${parentField.label} (${parentField.type})`}\r\n                                                    />\r\n                                                ))}\r\n\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Formula / Logic\"\r\n                                                    value={field.formula || ''}\r\n                                                    onChange={(e) => updateField(field.id, { formula: e.target.value })}\r\n                                                    margin=\"normal\"\r\n                                                    helperText=\"Use field labels in lowercase with underscores (e.g., calculateAge(date_of_birth))\"\r\n                                                />\r\n\r\n                                                {field.parentFields && field.parentFields.length > 0 && field.formula && (\r\n                                                    <Alert severity=\"info\" sx={{ mt: 1 }}>\r\n                                                        Available variables: {field.parentFields.map(id => {\r\n                                                            const parentField = fields.find(f => f.id === id);\r\n                                                            return parentField?.label.toLowerCase().replace(/\\s+/g, '_');\r\n                                                        }).join(', ')}\r\n                                                    </Alert>\r\n                                                )}\r\n                                            </Box>\r\n                                        )}\r\n\r\n                                        {(field.type === 'select' || field.type === 'radio' || field.type === 'checkbox') && !field.derived && (\r\n                                            <Box mb={2}>\r\n                                                <Typography variant=\"subtitle1\">Options</Typography>\r\n                                                {field.options?.map((option, optIdx) => (\r\n                                                    <Box key={optIdx} display=\"flex\" alignItems=\"center\" mb={1} gap={1}>\r\n                                                        <TextField\r\n                                                            label={`Option ${optIdx + 1}`}\r\n                                                            value={option}\r\n                                                            onChange={(e) => {\r\n                                                                const newOptions = [...(field.options ?? [])];\r\n                                                                newOptions[optIdx] = e.target.value;\r\n                                                                updateField(field.id, { options: newOptions });\r\n                                                            }}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                        {field.options && field.options.length > 2 && (\r\n                                                            <IconButton\r\n                                                                size=\"small\"\r\n                                                                onClick={() => {\r\n                                                                    const newOptions = field.options!.filter((_, i) => i !== optIdx);\r\n                                                                    updateField(field.id, { options: newOptions });\r\n                                                                }}\r\n                                                            >\r\n                                                                <DeleteIcon fontSize=\"small\" />\r\n                                                            </IconButton>\r\n                                                        )}\r\n                                                        <FormControlLabel\r\n                                                            control={\r\n                                                                field.type === 'checkbox' ? (\r\n                                                                    <Checkbox\r\n                                                                        checked={Array.isArray(field.validation['correctAnswers']) ?\r\n                                                                            field.validation['correctAnswers'].includes(option) : false}\r\n                                                                        onChange={(e) => {\r\n                                                                            let correctAnswers = Array.isArray(field.validation['correctAnswers'])\r\n                                                                                ? [...field.validation['correctAnswers']]\r\n                                                                                : [];\r\n                                                                            if (e.target.checked) {\r\n                                                                                correctAnswers.push(option);\r\n                                                                            } else {\r\n                                                                                correctAnswers = correctAnswers.filter(ans => ans !== option);\r\n                                                                            }\r\n                                                                            updateField(field.id, {\r\n                                                                                validation: {\r\n                                                                                    ...field.validation,\r\n                                                                                    correctAnswers,\r\n                                                                                },\r\n                                                                            });\r\n                                                                        }}\r\n                                                                    />\r\n                                                                ) : (\r\n                                                                    <Radio\r\n                                                                        checked={field.validation['correctAnswer'] === option}\r\n                                                                        onChange={() =>\r\n                                                                            updateField(field.id, {\r\n                                                                                validation: {\r\n                                                                                    ...field.validation,\r\n                                                                                    correctAnswer: option,\r\n                                                                                },\r\n                                                                            })\r\n                                                                        }\r\n                                                                    />\r\n                                                                )\r\n                                                            }\r\n                                                            label=\"Correct\"\r\n                                                        />\r\n                                                    </Box>\r\n                                                ))}\r\n                                                <Button\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => {\r\n                                                        const newOptions = [...(field.options ?? []), `Option ${field.options!.length + 1}`];\r\n                                                        updateField(field.id, { options: newOptions });\r\n                                                    }}\r\n                                                >\r\n                                                    Add Option\r\n                                                </Button>\r\n                                            </Box>\r\n                                        )}\r\n                                    </Box>\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </Box>\r\n                        ))}\r\n                    </List>\r\n                </Box>\r\n\r\n                {showPreview && fields.length > 0 && (\r\n                    <Box flex={1}>\r\n                        <Paper elevation={2} sx={{ p: 3 }}>\r\n                            <Typography variant=\"h6\" gutterBottom>Live Preview</Typography>\r\n                            <Box>\r\n                                {fields.map(field => (\r\n                                    field.label ? renderPreviewField(field) : null\r\n                                ))}\r\n                                {fields.some(f => f.derived) && (\r\n                                    <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n                                        Derived fields will auto-update as you change parent fields above.\r\n                                    </Alert>\r\n                                )}\r\n                            </Box>\r\n                        </Paper>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n\r\n            <Box mt={3}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenDialog(true)} disabled={fields.length === 0}>\r\n                    Save Form\r\n                </Button>\r\n            </Box>\r\n\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n                <DialogTitle>Save Form</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Form Name\"\r\n                        value={formName}\r\n                        onChange={(e) => setFormName(e.target.value)}\r\n                        margin=\"normal\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n                    <Button onClick={saveForm} variant=\"contained\" color=\"primary\" disabled={!formName}>\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CreateForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}