{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ishik\\\\VS code\\\\Form\\\\dynamic-form-builder\\\\src\\\\components\\\\PreviewForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, TextField, Typography, Checkbox, FormControlLabel, Select, MenuItem, RadioGroup, Radio, FormHelperText, Button, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreviewForm = () => {\n  _s();\n  const [schema, setSchema] = useState(null);\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [result, setResult] = useState(null);\n  const {\n    formId\n  } = useParams();\n  useEffect(() => {\n    if (!formId) return;\n    const stored = localStorage.getItem(formId);\n    if (stored) {\n      const parsed = JSON.parse(stored);\n      setSchema(parsed);\n      const defaults = {};\n      parsed.fields.forEach(f => {\n        if (!f.derived) {\n          defaults[f.id] = f.defaultValue || (f.type === 'checkbox' ? [] : '');\n        }\n      });\n      setValues(defaults);\n    }\n  }, [formId]);\n  const evalFormula = useCallback((formula, context) => {\n    try {\n      let contextValues = Object.values(context);\n      if (contextValues.some(val => val === '' || val === undefined || val === null)) {\n        return '';\n      }\n      const safeContext = {\n        ...context\n      };\n      const helpers = {\n        Date: Date,\n        Math: Math,\n        parseInt: parseInt,\n        parseFloat: parseFloat,\n        calculateAge: birthDate => {\n          if (!birthDate) return 0;\n          const today = new Date();\n          const birth = new Date(birthDate);\n          if (isNaN(birth.getTime())) return 0;\n          let age = today.getFullYear() - birth.getFullYear();\n          const monthDiff = today.getMonth() - birth.getMonth();\n          if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birth.getDate()) {\n            age--;\n          }\n          return age;\n        }\n      };\n      const evalContext = {\n        ...safeContext,\n        ...helpers\n      };\n      const params = Object.keys(evalContext);\n      contextValues = Object.values(evalContext);\n      const func = new Function(...params, `\"use strict\"; return (${formula});`);\n      return func(...contextValues);\n    } catch (error) {\n      console.error('Formula evaluation error:', error, 'Formula:', formula, 'Context:', context);\n      return 'Error';\n    }\n  }, []);\n  const updateDerivedFields = useCallback(currentValues => {\n    if (!schema) return currentValues;\n    const newValues = {\n      ...currentValues\n    };\n    let hasChanges = false;\n    schema.fields.forEach(field => {\n      if (field.derived && field.parentFields && field.formula) {\n        const context = {};\n        let hasAllParents = true;\n        field.parentFields.forEach(parentId => {\n          const parentField = schema.fields.find(f => f.id === parentId);\n          if (parentField && parentId in currentValues) {\n            const variableName = parentField.label.toLowerCase().replace(/\\s+/g, '_');\n            context[variableName] = currentValues[parentId];\n          } else {\n            hasAllParents = false;\n          }\n        });\n        if (hasAllParents) {\n          const computedValue = evalFormula(field.formula, context);\n          if (newValues[field.id] !== computedValue) {\n            newValues[field.id] = computedValue;\n            hasChanges = true;\n          }\n        } else {\n          if (field.id in newValues) {\n            delete newValues[field.id];\n            hasChanges = true;\n          }\n        }\n      }\n    });\n    return hasChanges ? newValues : currentValues;\n  }, [schema, evalFormula]);\n  useEffect(() => {\n    if (!schema || Object.keys(values).length === 0) return;\n    const updatedValues = updateDerivedFields(values);\n    if (updatedValues !== values) {\n      setValues(updatedValues);\n    }\n  }, [schema, values, updateDerivedFields]);\n  const validateField = useCallback((field, value) => {\n    const {\n      validation\n    } = field;\n    if (validation.required && (!value || Array.isArray(value) && value.length === 0)) {\n      return 'This field is required.';\n    }\n    if (typeof value === 'string') {\n      if (validation.minLength && value.length < validation.minLength) {\n        return `Minimum length is ${validation.minLength}`;\n      }\n      if (validation.maxLength && value.length > validation.maxLength) {\n        return `Maximum length is ${validation.maxLength}`;\n      }\n      if (validation.email && value && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\n        return 'Invalid email format.';\n      }\n      if (validation.password && value && (!/^.{8,}$/.test(value) || !/\\d/.test(value))) {\n        return 'Password must be at least 8 characters and contain a number.';\n      }\n    }\n    return '';\n  }, []);\n  const handleChange = useCallback((id, value) => {\n    const newValues = {\n      ...values,\n      [id]: value\n    };\n    const updatedValues = updateDerivedFields(newValues);\n    setValues(updatedValues);\n    const field = schema === null || schema === void 0 ? void 0 : schema.fields.find(f => f.id === id);\n    if (field && !field.derived) {\n      const err = validateField(field, value);\n      setErrors(prev => ({\n        ...prev,\n        [id]: err\n      }));\n    }\n  }, [values, updateDerivedFields, schema, validateField]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    const newErrors = {};\n    schema === null || schema === void 0 ? void 0 : schema.fields.forEach(field => {\n      if (!field.derived) {\n        const err = validateField(field, values[field.id]);\n        if (err) newErrors[field.id] = err;\n      }\n    });\n    setErrors(newErrors);\n    let correct = true;\n    let feedback = '';\n    schema === null || schema === void 0 ? void 0 : schema.fields.forEach(field => {\n      const fieldValue = values[field.id];\n      if ((field.type === 'radio' || field.type === 'select') && field.validation.correctAnswer) {\n        if (fieldValue !== field.validation.correctAnswer) {\n          correct = false;\n          feedback += `${field.label}: Incorrect answer.\\n`;\n        }\n      }\n      if (field.type === 'checkbox' && Array.isArray(field.validation.correctAnswers)) {\n        const userAnswers = Array.isArray(fieldValue) ? fieldValue : [];\n        const correctAnswers = field.validation.correctAnswers;\n        if (userAnswers.length !== correctAnswers.length || !correctAnswers.every(ans => userAnswers.includes(ans))) {\n          correct = false;\n          feedback += `${field.label}: Incorrect answer.\\n`;\n        }\n      }\n    });\n    setResult(correct ? 'All answers are correct!' : feedback || 'Some answers are incorrect.');\n    if (Object.keys(newErrors).length === 0) {\n      console.log('Form Values:', values);\n      alert('Form submitted successfully (check console for values)!');\n    }\n  };\n  if (!schema) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading form...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: [\"Preview: \", schema.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 3,\n      onSubmit: handleSubmit,\n      children: [schema.fields.map(field => {\n        var _values$field$id, _errors$field$id, _field$options, _field$options2, _field$options3;\n        const value = (_values$field$id = values[field.id]) !== null && _values$field$id !== void 0 ? _values$field$id : field.type === 'checkbox' ? [] : '';\n        const error = (_errors$field$id = errors[field.id]) !== null && _errors$field$id !== void 0 ? _errors$field$id : '';\n        const isDisabled = field.derived || false;\n        switch (field.type) {\n          case 'text':\n          case 'number':\n          case 'date':\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              type: field.type,\n              label: `${field.label}${isDisabled ? ' (Auto-calculated)' : ''}`,\n              value: value,\n              onChange: e => handleChange(field.id, e.target.value),\n              error: !!error,\n              helperText: error || (isDisabled ? 'This field is automatically calculated' : ''),\n              disabled: isDisabled,\n              sx: isDisabled ? {\n                '& .MuiInputBase-input': {\n                  color: 'text.secondary'\n                }\n              } : {}\n            }, field.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this);\n          case 'textarea':\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              label: `${field.label}${isDisabled ? ' (Auto-calculated)' : ''}`,\n              value: value,\n              onChange: e => handleChange(field.id, e.target.value),\n              error: !!error,\n              helperText: error || (isDisabled ? 'This field is automatically calculated' : ''),\n              multiline: true,\n              rows: 3,\n              disabled: isDisabled,\n              sx: isDisabled ? {\n                '& .MuiInputBase-input': {\n                  color: 'text.secondary'\n                }\n              } : {}\n            }, field.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this);\n          case 'select':\n            return /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [field.label, isDisabled ? ' (Auto-calculated)' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                fullWidth: true,\n                value: value,\n                onChange: e => handleChange(field.id, e.target.value),\n                disabled: isDisabled,\n                sx: isDisabled ? {\n                  color: 'text.secondary'\n                } : {},\n                children: (_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.map((opt, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: opt,\n                  children: opt\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 37\n              }, this), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 47\n              }, this), isDisabled && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"This field is automatically calculated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 52\n              }, this)]\n            }, field.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this);\n          case 'radio':\n            return /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [field.label, isDisabled ? ' (Auto-calculated)' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: value,\n                onChange: e => handleChange(field.id, e.target.value),\n                children: (_field$options2 = field.options) === null || _field$options2 === void 0 ? void 0 : _field$options2.map((opt, i) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: opt,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    disabled: isDisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 58\n                  }, this),\n                  label: opt,\n                  sx: isDisabled ? {\n                    color: 'text.secondary'\n                  } : {}\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 37\n              }, this), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 47\n              }, this), isDisabled && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"This field is automatically calculated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 52\n              }, this)]\n            }, field.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this);\n          case 'checkbox':\n            return /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [field.label, isDisabled ? ' (Auto-calculated)' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 37\n              }, this), (_field$options3 = field.options) === null || _field$options3 === void 0 ? void 0 : _field$options3.map((opt, i) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: Array.isArray(value) && value.includes(opt),\n                  onChange: e => {\n                    if (!isDisabled) {\n                      const checked = e.target.checked;\n                      const currentValue = Array.isArray(value) ? value : [];\n                      const newValue = checked ? [...currentValue, opt] : currentValue.filter(v => v !== opt);\n                      handleChange(field.id, newValue);\n                    }\n                  },\n                  disabled: isDisabled\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 49\n                }, this),\n                label: opt,\n                sx: isDisabled ? {\n                  color: 'text.secondary'\n                } : {}\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 41\n              }, this)), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 47\n              }, this), isDisabled && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"This field is automatically calculated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 52\n              }, this)]\n            }, field.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 33\n            }, this);\n          default:\n            return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        size: \"large\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), submitted && result && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: result === 'All answers are correct!' ? 'success' : 'error',\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n};\n_s(PreviewForm, \"vX1NpaI56ioETN3WIpwiEv1+/ow=\", false, function () {\n  return [useParams];\n});\n_c = PreviewForm;\nexport default PreviewForm;\nvar _c;\n$RefreshReg$(_c, \"PreviewForm\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","Box","TextField","Typography","Checkbox","FormControlLabel","Select","MenuItem","RadioGroup","Radio","FormHelperText","Button","Alert","jsxDEV","_jsxDEV","PreviewForm","_s","schema","setSchema","values","setValues","errors","setErrors","submitted","setSubmitted","result","setResult","formId","stored","localStorage","getItem","parsed","JSON","parse","defaults","fields","forEach","f","derived","id","defaultValue","type","evalFormula","formula","context","contextValues","Object","some","val","undefined","safeContext","helpers","Date","Math","parseInt","parseFloat","calculateAge","birthDate","today","birth","isNaN","getTime","age","getFullYear","monthDiff","getMonth","getDate","evalContext","params","keys","func","Function","error","console","updateDerivedFields","currentValues","newValues","hasChanges","field","parentFields","hasAllParents","parentId","parentField","find","variableName","label","toLowerCase","replace","computedValue","length","updatedValues","validateField","value","validation","required","Array","isArray","minLength","maxLength","email","test","password","handleChange","err","prev","handleSubmit","e","preventDefault","newErrors","correct","feedback","fieldValue","correctAnswer","correctAnswers","userAnswers","every","ans","includes","log","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","p","variant","gutterBottom","name","component","display","flexDirection","gap","onSubmit","map","_values$field$id","_errors$field$id","_field$options","_field$options2","_field$options3","isDisabled","onChange","target","helperText","disabled","sx","color","multiline","rows","fullWidth","options","opt","i","control","checked","currentValue","newValue","filter","v","size","mt","severity","_c","$RefreshReg$"],"sources":["C:/Users/ishik/VS code/Form/dynamic-form-builder/src/components/PreviewForm.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Typography,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Select,\r\n    MenuItem,\r\n    RadioGroup,\r\n    Radio,\r\n    FormHelperText,\r\n    Button,\r\n    Alert,\r\n} from '@mui/material';\r\n\r\ninterface Validation {\r\n    required: boolean;\r\n    minLength?: number;\r\n    maxLength?: number;\r\n    email?: boolean;\r\n    password?: boolean;\r\n    correctAnswers?: string[];\r\n    correctAnswer?: string;\r\n}\r\n\r\ninterface Field {\r\n    derived?: boolean;\r\n    parentFields?: string[];\r\n    formula?: string;\r\n    id: string;\r\n    type: string;\r\n    label: string;\r\n    defaultValue?: string;\r\n    options?: string[];\r\n    validation: Validation;\r\n}\r\n\r\ninterface FormSchema {\r\n    name: string;\r\n    fields: Field[];\r\n}\r\n\r\nconst PreviewForm: React.FC = () => {\r\n    const [schema, setSchema] = useState<FormSchema | null>(null);\r\n    const [values, setValues] = useState<Record<string, any>>({});\r\n    const [errors, setErrors] = useState<Record<string, string>>({});\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [result, setResult] = useState<string | null>(null);\r\n\r\n    const { formId } = useParams<{ formId: string }>();\r\n\r\n    useEffect(() => {\r\n        if (!formId) return;\r\n\r\n        const stored = localStorage.getItem(formId);\r\n        if (stored) {\r\n            const parsed = JSON.parse(stored) as FormSchema;\r\n            setSchema(parsed);\r\n\r\n            const defaults: Record<string, any> = {};\r\n            parsed.fields.forEach((f) => {\r\n                if (!f.derived) {\r\n                    defaults[f.id] = f.defaultValue || (f.type === 'checkbox' ? [] : '');\r\n                }\r\n            });\r\n            setValues(defaults);\r\n        }\r\n    }, [formId]);\r\n\r\n    const evalFormula = useCallback((formula: string, context: Record<string, any>) => {\r\n        try {\r\n            let contextValues = Object.values(context);\r\n            if (contextValues.some(val => val === '' || val === undefined || val === null)) {\r\n                return '';\r\n            }\r\n\r\n            const safeContext = { ...context };\r\n\r\n            const helpers = {\r\n                Date: Date,\r\n                Math: Math,\r\n                parseInt: parseInt,\r\n                parseFloat: parseFloat,\r\n                calculateAge: (birthDate: string) => {\r\n                    if (!birthDate) return 0;\r\n                    const today = new Date();\r\n                    const birth = new Date(birthDate);\r\n                    if (isNaN(birth.getTime())) return 0;\r\n\r\n                    let age = today.getFullYear() - birth.getFullYear();\r\n                    const monthDiff = today.getMonth() - birth.getMonth();\r\n\r\n                    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n                        age--;\r\n                    }\r\n                    return age;\r\n                }\r\n            };\r\n\r\n            const evalContext = { ...safeContext, ...helpers };\r\n\r\n            const params = Object.keys(evalContext);\r\n            contextValues = Object.values(evalContext);\r\n\r\n            const func = new Function(...params, `\"use strict\"; return (${formula});`);\r\n            return func(...contextValues);\r\n        } catch (error) {\r\n            console.error('Formula evaluation error:', error, 'Formula:', formula, 'Context:', context);\r\n            return 'Error';\r\n        }\r\n    }, []);\r\n\r\n    const updateDerivedFields = useCallback((currentValues: Record<string, any>) => {\r\n        if (!schema) return currentValues;\r\n\r\n        const newValues = { ...currentValues };\r\n        let hasChanges = false;\r\n\r\n        schema.fields.forEach(field => {\r\n            if (field.derived && field.parentFields && field.formula) {\r\n                const context: Record<string, any> = {};\r\n                let hasAllParents = true;\r\n\r\n                field.parentFields.forEach(parentId => {\r\n                    const parentField = schema.fields.find(f => f.id === parentId);\r\n                    if (parentField && parentId in currentValues) {\r\n                        const variableName = parentField.label.toLowerCase().replace(/\\s+/g, '_');\r\n                        context[variableName] = currentValues[parentId];\r\n                    } else {\r\n                        hasAllParents = false;\r\n                    }\r\n                });\r\n\r\n                if (hasAllParents) {\r\n                    const computedValue = evalFormula(field.formula, context);\r\n                    \r\n                    if (newValues[field.id] !== computedValue) {\r\n                        newValues[field.id] = computedValue;\r\n                        hasChanges = true;\r\n                    }\r\n                } else {\r\n                    if (field.id in newValues) {\r\n                        delete newValues[field.id];\r\n                        hasChanges = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return hasChanges ? newValues : currentValues;\r\n    }, [schema, evalFormula]);\r\n\r\n    useEffect(() => {\r\n        if (!schema || Object.keys(values).length === 0) return;\r\n\r\n        const updatedValues = updateDerivedFields(values);\r\n        if (updatedValues !== values) {\r\n            setValues(updatedValues);\r\n        }\r\n    }, [schema, values, updateDerivedFields]);\r\n\r\n    const validateField = useCallback((field: Field, value: any): string => {\r\n        const { validation } = field;\r\n\r\n        if (validation.required && (!value || (Array.isArray(value) && value.length === 0))) {\r\n            return 'This field is required.';\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            if (validation.minLength && value.length < validation.minLength) {\r\n                return `Minimum length is ${validation.minLength}`;\r\n            }\r\n            if (validation.maxLength && value.length > validation.maxLength) {\r\n                return `Maximum length is ${validation.maxLength}`;\r\n            }\r\n            if (validation.email && value && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\r\n                return 'Invalid email format.';\r\n            }\r\n            if (validation.password && value &&\r\n                (!/^.{8,}$/.test(value) || !/\\d/.test(value))) {\r\n                return 'Password must be at least 8 characters and contain a number.';\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }, []);\r\n\r\n    const handleChange = useCallback((id: string, value: any) => {\r\n        const newValues = { ...values, [id]: value };\r\n        \r\n        const updatedValues = updateDerivedFields(newValues);\r\n        setValues(updatedValues);\r\n\r\n        const field = schema?.fields.find(f => f.id === id);\r\n        if (field && !field.derived) {\r\n            const err = validateField(field, value);\r\n            setErrors(prev => ({ ...prev, [id]: err }));\r\n        }\r\n    }, [values, updateDerivedFields, schema, validateField]);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setSubmitted(true);\r\n\r\n        const newErrors: Record<string, string> = {};\r\n\r\n        schema?.fields.forEach(field => {\r\n            if (!field.derived) {\r\n                const err = validateField(field, values[field.id]);\r\n                if (err) newErrors[field.id] = err;\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors);\r\n\r\n        let correct = true;\r\n        let feedback = '';\r\n\r\n        schema?.fields.forEach(field => {\r\n            const fieldValue = values[field.id];\r\n\r\n            if ((field.type === 'radio' || field.type === 'select') && field.validation.correctAnswer) {\r\n                if (fieldValue !== field.validation.correctAnswer) {\r\n                    correct = false;\r\n                    feedback += `${field.label}: Incorrect answer.\\n`;\r\n                }\r\n            }\r\n\r\n            if (field.type === 'checkbox' && Array.isArray(field.validation.correctAnswers)) {\r\n                const userAnswers = Array.isArray(fieldValue) ? fieldValue : [];\r\n                const correctAnswers = field.validation.correctAnswers;\r\n\r\n                if (userAnswers.length !== correctAnswers.length ||\r\n                    !correctAnswers.every(ans => userAnswers.includes(ans))) {\r\n                    correct = false;\r\n                    feedback += `${field.label}: Incorrect answer.\\n`;\r\n                }\r\n            }\r\n        });\r\n\r\n        setResult(correct ? 'All answers are correct!' : feedback || 'Some answers are incorrect.');\r\n\r\n        if (Object.keys(newErrors).length === 0) {\r\n            console.log('Form Values:', values);\r\n            alert('Form submitted successfully (check console for values)!');\r\n        }\r\n    };\r\n\r\n    if (!schema) {\r\n        return <Typography>Loading form...</Typography>;\r\n    }\r\n\r\n    return (\r\n        <Box p={4}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Preview: {schema.name}\r\n            </Typography>\r\n\r\n            <Box component=\"form\" display=\"flex\" flexDirection=\"column\" gap={3} onSubmit={handleSubmit}>\r\n                {schema.fields.map(field => {\r\n                    const value = values[field.id] ?? (field.type === 'checkbox' ? [] : '');\r\n                    const error = errors[field.id] ?? '';\r\n                    const isDisabled = field.derived || false;\r\n\r\n                    switch (field.type) {\r\n                        case 'text':\r\n                        case 'number':\r\n                        case 'date':\r\n                            return (\r\n                                <TextField\r\n                                    key={field.id}\r\n                                    type={field.type}\r\n                                    label={`${field.label}${isDisabled ? ' (Auto-calculated)' : ''}`}\r\n                                    value={value}\r\n                                    onChange={(e) => handleChange(field.id, e.target.value)}\r\n                                    error={!!error}\r\n                                    helperText={error || (isDisabled ? 'This field is automatically calculated' : '')}\r\n                                    disabled={isDisabled}\r\n                                    sx={isDisabled ? { '& .MuiInputBase-input': { color: 'text.secondary' } } : {}}\r\n                                />\r\n                            );\r\n\r\n                        case 'textarea':\r\n                            return (\r\n                                <TextField\r\n                                    key={field.id}\r\n                                    label={`${field.label}${isDisabled ? ' (Auto-calculated)' : ''}`}\r\n                                    value={value}\r\n                                    onChange={(e) => handleChange(field.id, e.target.value)}\r\n                                    error={!!error}\r\n                                    helperText={error || (isDisabled ? 'This field is automatically calculated' : '')}\r\n                                    multiline\r\n                                    rows={3}\r\n                                    disabled={isDisabled}\r\n                                    sx={isDisabled ? { '& .MuiInputBase-input': { color: 'text.secondary' } } : {}}\r\n                                />\r\n                            );\r\n\r\n                        case 'select':\r\n                            return (\r\n                                <Box key={field.id}>\r\n                                    <Typography>\r\n                                        {field.label}{isDisabled ? ' (Auto-calculated)' : ''}\r\n                                    </Typography>\r\n                                    <Select\r\n                                        fullWidth\r\n                                        value={value}\r\n                                        onChange={(e) => handleChange(field.id, e.target.value)}\r\n                                        disabled={isDisabled}\r\n                                        sx={isDisabled ? { color: 'text.secondary' } : {}}\r\n                                    >\r\n                                        {field.options?.map((opt, i) => (\r\n                                            <MenuItem key={i} value={opt}>\r\n                                                {opt}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                    {error && <FormHelperText error>{error}</FormHelperText>}\r\n                                    {isDisabled && <FormHelperText>This field is automatically calculated</FormHelperText>}\r\n                                </Box>\r\n                            );\r\n\r\n                        case 'radio':\r\n                            return (\r\n                                <Box key={field.id}>\r\n                                    <Typography>\r\n                                        {field.label}{isDisabled ? ' (Auto-calculated)' : ''}\r\n                                    </Typography>\r\n                                    <RadioGroup\r\n                                        value={value}\r\n                                        onChange={(e) => handleChange(field.id, e.target.value)}\r\n                                    >\r\n                                        {field.options?.map((opt, i) => (\r\n                                            <FormControlLabel\r\n                                                key={i}\r\n                                                value={opt}\r\n                                                control={<Radio disabled={isDisabled} />}\r\n                                                label={opt}\r\n                                                sx={isDisabled ? { color: 'text.secondary' } : {}}\r\n                                            />\r\n                                        ))}\r\n                                    </RadioGroup>\r\n                                    {error && <FormHelperText error>{error}</FormHelperText>}\r\n                                    {isDisabled && <FormHelperText>This field is automatically calculated</FormHelperText>}\r\n                                </Box>\r\n                            );\r\n\r\n                        case 'checkbox':\r\n                            return (\r\n                                <Box key={field.id}>\r\n                                    <Typography>\r\n                                        {field.label}{isDisabled ? ' (Auto-calculated)' : ''}\r\n                                    </Typography>\r\n                                    {field.options?.map((opt, i) => (\r\n                                        <FormControlLabel\r\n                                            key={i}\r\n                                            control={\r\n                                                <Checkbox\r\n                                                    checked={Array.isArray(value) && value.includes(opt)}\r\n                                                    onChange={(e) => {\r\n                                                        if (!isDisabled) {\r\n                                                            const checked = e.target.checked;\r\n                                                            const currentValue = Array.isArray(value) ? value : [];\r\n                                                            const newValue = checked\r\n                                                                ? [...currentValue, opt]\r\n                                                                : currentValue.filter(v => v !== opt);\r\n                                                            handleChange(field.id, newValue);\r\n                                                        }\r\n                                                    }}\r\n                                                    disabled={isDisabled}\r\n                                                />\r\n                                            }\r\n                                            label={opt}\r\n                                            sx={isDisabled ? { color: 'text.secondary' } : {}}\r\n                                        />\r\n                                    ))}\r\n                                    {error && <FormHelperText error>{error}</FormHelperText>}\r\n                                    {isDisabled && <FormHelperText>This field is automatically calculated</FormHelperText>}\r\n                                </Box>\r\n                            );\r\n\r\n                        default:\r\n                            return null;\r\n                    }\r\n                })}\r\n\r\n                <Button variant=\"contained\" type=\"submit\" size=\"large\">\r\n                    Submit\r\n                </Button>\r\n            </Box>\r\n\r\n            {submitted && result && (\r\n                <Box mt={2}>\r\n                    <Alert severity={result === 'All answers are correct!' ? 'success' : 'error'}>\r\n                        {result}\r\n                    </Alert>\r\n                </Box>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PreviewForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}