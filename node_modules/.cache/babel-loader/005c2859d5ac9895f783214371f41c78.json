{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ishik\\\\VS code\\\\Form\\\\dynamic-form-builder\\\\src\\\\components\\\\FormPreview.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormPreview = ({\n  formConfig\n}) => {\n  const renderField = field => {\n    switch (field.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: field.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: field.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 24\n        }, this);\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: field.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this);\n      case 'textarea':\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: field.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this);\n      // Add more field types as needed\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: formConfig.fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), renderField(field)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = FormPreview;\nexport default FormPreview;\nvar _c;\n$RefreshReg$(_c, \"FormPreview\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FormPreview","formConfig","renderField","field","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","children","fields","map","index","label","_c","$RefreshReg$"],"sources":["C:/Users/ishik/VS code/Form/dynamic-form-builder/src/components/FormPreview.tsx"],"sourcesContent":["import React from 'react';\nimport { FormConfig } from '../types';\n\ninterface FormPreviewProps {\n    formConfig: FormConfig;\n}\n\nconst FormPreview: React.FC<FormPreviewProps> = ({ formConfig }) => {\n    const renderField = (field: any) => {\n        switch (field.type) {\n            case 'text':\n                return <input type=\"text\" placeholder={field.placeholder} />;\n            case 'number':\n                return <input type=\"number\" placeholder={field.placeholder} />;\n            case 'email':\n                return <input type=\"email\" placeholder={field.placeholder} />;\n            case 'textarea':\n                return <textarea placeholder={field.placeholder} />;\n            // Add more field types as needed\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <div>\n            <h2>Form Preview</h2>\n            <form>\n                {formConfig.fields.map((field, index) => (\n                    <div key={index}>\n                        <label>{field.label}</label>\n                        {renderField(field)}\n                    </div>\n                ))}\n            </form>\n        </div>\n    );\n};\n\nexport default FormPreview;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAChE,MAAMC,WAAW,GAAIC,KAAU,IAAK;IAChC,QAAQA,KAAK,CAACC,IAAI;MACd,KAAK,MAAM;QACP,oBAAOL,OAAA;UAAOK,IAAI,EAAC,MAAM;UAACC,WAAW,EAAEF,KAAK,CAACE;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAChE,KAAK,QAAQ;QACT,oBAAOV,OAAA;UAAOK,IAAI,EAAC,QAAQ;UAACC,WAAW,EAAEF,KAAK,CAACE;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClE,KAAK,OAAO;QACR,oBAAOV,OAAA;UAAOK,IAAI,EAAC,OAAO;UAACC,WAAW,EAAEF,KAAK,CAACE;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACjE,KAAK,UAAU;QACX,oBAAOV,OAAA;UAAUM,WAAW,EAAEF,KAAK,CAACE;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvD;MACA;QACI,OAAO,IAAI;IACnB;EACJ,CAAC;EAED,oBACIV,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBV,OAAA;MAAAW,QAAA,EACKT,UAAU,CAACU,MAAM,CAACC,GAAG,CAAC,CAACT,KAAK,EAAEU,KAAK,kBAChCd,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAQP,KAAK,CAACW;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC3BP,WAAW,CAACC,KAAK,CAAC;MAAA,GAFbU,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACM,EAAA,GA9BIf,WAAuC;AAgC7C,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}