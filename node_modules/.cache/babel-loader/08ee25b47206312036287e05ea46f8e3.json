{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst CreateForm = () => {\n  _s();\n  const [fields, setFields] = useState([]);\n  const [newField, setNewField] = useState('text');\n  const [formName, setFormName] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const addField = () => {\n    const id = uuidv4();\n    const field = {\n      id,\n      type: newField,\n      label: '',\n      validation: {\n        required: false\n      },\n      options: newField === 'select' ? [] : undefined\n    };\n    if (['select', 'radio', 'checkbox'].includes(newField)) {\n      field.options = ['Option 1', 'Option 2'];\n    }\n    setFields(prev => [...prev, field]);\n  };\n};\n_s(CreateForm, \"6QyAmJZX5RFuU7bJ6s6hTy/qmMo=\");\n_c = CreateForm;\nexport default CreateForm;\nvar _c;\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"names":["useState","CreateForm","_s","fields","setFields","newField","setNewField","formName","setFormName","openDialog","setOpenDialog","addField","id","uuidv4","field","type","label","validation","required","options","undefined","includes","prev","_c","$RefreshReg$"],"sources":["C:/Users/ishik/VS code/Form/dynamic-form-builder/src/components/CreateForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button, MenuItem, Select, TextField, Typography, Checkbox, FormControlLabel, Dialog, DialogTitle, DialogContent, DialogActions, List, ListItem, IconButton, Divider, } from '@mui/material';\r\n\r\n\r\ntype FieldType = 'text' | 'number' | 'textarea' | 'select' | 'radio' | 'checkbox' | 'date';\r\n\r\ninterface Validation {\r\n  required: boolean;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  email?: boolean;\r\n  password?: boolean;\r\n}\r\n\r\ninterface Field {\r\n  id: string;\r\n  type: FieldType;\r\n  label: string;\r\n  defaultValue?: string;\r\n  options?: string[];\r\n  validation: Validation;\r\n  derived?: boolean;\r\n  parentFields?: string[];\r\n  formula?: string;\r\n}\r\n\r\nconst CreateForm: React.FC = () => {\r\n    const [fields, setFields] = useState<Field[]>([]);\r\n    const [newField, setNewField] = useState<FieldType>('text');\r\n    const [formName, setFormName] = useState('');\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    \r\n    const addField = () => {\r\n        const id = uuidv4();\r\n        const field: Field = {\r\n            id,\r\n            type: newField,\r\n            label: '',\r\n            validation: { required: false },\r\n            options: newField === 'select' ? [] : undefined,\r\n        };\r\n\r\n        if (['select', 'radio', 'checkbox'].includes(newField)) {\r\n            field.options = ['Option 1', 'Option 2'];\r\n        }\r\n\r\n        setFields((prev)=>[...prev, field]);\r\n    }\r\n    \r\n};\r\n\r\nexport default CreateForm;\r\n"],"mappings":";AAAA,SAAgBA,QAAQ,QAAQ,OAAO;AA0BvC,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAY,MAAM,CAAC;EAC3D,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,EAAE,GAAGC,MAAM,CAAC,CAAC;IACnB,MAAMC,KAAY,GAAG;MACjBF,EAAE;MACFG,IAAI,EAAEV,QAAQ;MACdW,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAM,CAAC;MAC/BC,OAAO,EAAEd,QAAQ,KAAK,QAAQ,GAAG,EAAE,GAAGe;IAC1C,CAAC;IAED,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC,CAACC,QAAQ,CAAChB,QAAQ,CAAC,EAAE;MACpDS,KAAK,CAACK,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;IAC5C;IAEAf,SAAS,CAAEkB,IAAI,IAAG,CAAC,GAAGA,IAAI,EAAER,KAAK,CAAC,CAAC;EACvC,CAAC;AAEL,CAAC;AAACZ,EAAA,CAvBID,UAAoB;AAAAsB,EAAA,GAApBtB,UAAoB;AAyB1B,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}